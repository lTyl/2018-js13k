class Game{constructor(){this.e=[]}run(){ctx.clearRect(0,0,cv.width,cv.height),this.update(),this.e.forEach(t=>t.update(16)),this.e.forEach(t=>t.draw(ctx)),this.draw()}update(){}draw(){}end(){this.e.forEach(t=>t.end()),this.e=null}add(t,s,i,e){e=e||{},this.e.push(new t(s,i,e))}kill(t){this.e.erase(t)}getE(t){return this.e[Object.keys(this.e).find(s=>this.e[s].n===t)]}}let cv=document.getElementById("g"),ctx=cv.getContext("2d");Array.prototype.erase=function(t){for(let s=this.length;s--;)this[s]===t&&this.splice(s,1);return this};class System{constructor(t){this.cg=0,this.ci=0,this._now(t)}_now(t){this.cg=new t,this.ci=setInterval(()=>this.cg.run(),16)}setGame(t){this.cg.end(),clearInterval(this.ci),this._now(t)}}a=u=r=d=l=0,onkeydown=(s=>t(s,1)),onkeyup=(s=>t(s)),t=((t,s,i,e)=>{for(e in i={u:[38,90,87],r:[39,68],d:[40,83],l:[37,65,81],a:[32]})i[e].includes(t.keyCode)&&(top[e]=s)});class Entity{constructor(t,s,i={}){this.hasCollision=1,i=i||{},this.x=t,this.y=s,this.w=i.w||1,this.h=i.h||1,this.o=i,this.n=i.n,this.c=i.c||"#000000"}collide(t){}draw(t){ctx.fillStyle=this.c,ctx.fillRect(this.x,this.y,this.w,this.h)}update(){}end(){s.cg.kill(this)}}class Bullet extends Entity{constructor(t,s,i={}){super(t,s,i),this.w=10,this.h=10,this.master=i.master,this.endX=i.tx,this.endY=i.ty,this.startX=t,this.startY=s,this.sDistance=Math.sqrt(Math.pow(this.endX-t,2)+Math.pow(this.endY-s,2)),this.directionX=(this.endX-t)/this.sDistance,this.directionY=(this.endY-s)/this.sDistance,this.speed=i.speed||.5}update(t){this.x+=this.directionX*this.speed*t,this.y+=this.directionY*this.speed*t,(this.x<=0||this.y<=0||this.x>=cv.width||this.y>=cv.height)&&this.end()}collide(t){s.cg.kill(this)}}class Enemy extends Entity{constructor(t,i,e){super(t,i,e),this.target=e.target,this.c="red",this._updateMove(),this.c1=setInterval(()=>this._updateMove(),3e3),this.c2=setInterval(()=>{s.cg.add(Bullet,this.x,this.y,{tx:this.target.x,ty:this.target.y,c:"#ff0000",master:this})},1e3)}update(t){this.x+=this.directionX*this.speed*t,this.y+=this.directionY*this.speed*t}_updateMove(){this.target=this.target||{x:0,y:0},this.endX=this.target.x,this.endY=this.target.y,this.sDistance=Math.sqrt(Math.pow(this.endX-this.x,2)+Math.pow(this.endY-this.y,2)),this.directionX=(this.endX-this.x)/this.sDistance,this.directionY=(this.endY-this.y)/this.sDistance,this.speed=.1}collide(t){s.cg.kill(this),clearInterval(this.c1),clearInterval(this.c2),s.cg.thingsKilled++,console.log("THINGS KILLED:",s.cg.thingsKilled)}}class Player extends Entity{constructor(t,s,i){super(t,s,i),this.c="lime",this.canShoot=1,this.c1=setInterval(()=>this.canShoot=1,200)}update(){u&&(this.y-=10),d&&(this.y+=10),l&&(this.x-=10),r&&(this.x+=10),a&&this.canShoot&&(s.cg.add(Bullet,this.x,this.y,{tx:cv.width/2,ty:cv.height/2,speed:.5,master:this}),this.canShoot=0)}collide(t){s.cg.kill(this),clearInterval(this.c1),alert("YOU DEAD!")}}var letters=letters={A:[[,1],[1,,1],[1,,1],[1,1,1],[1,,1]],B:[[1,1],[1,,1],[1,1,1],[1,,1],[1,1]],C:[[1,1,1],[1],[1],[1],[1,1,1]],D:[[1,1],[1,,1],[1,,1],[1,,1],[1,1]],E:[[1,1,1],[1],[1,1,1],[1],[1,1,1]],F:[[1,1,1],[1],[1,1],[1],[1]],G:[[,1,1],[1],[1,,1,1],[1,,,1],[,1,1]],H:[[1,,1],[1,,1],[1,1,1],[1,,1],[1,,1]],I:[[1,1,1],[,1],[,1],[,1],[1,1,1]],J:[[1,1,1],[,,1],[,,1],[1,,1],[1,1,1]],K:[[1,,,1],[1,,1],[1,1],[1,,1],[1,,,1]],L:[[1],[1],[1],[1],[1,1,1]],M:[[1,1,1,1,1],[1,,1,,1],[1,,1,,1],[1,,,,1],[1,,,,1]],N:[[1,,,1],[1,1,,1],[1,,1,1],[1,,,1],[1,,,1]],O:[[1,1,1],[1,,1],[1,,1],[1,,1],[1,1,1]],P:[[1,1,1],[1,,1],[1,1,1],[1],[1]],Q:[[0,1,1],[1,,,1],[1,,,1],[1,,1,1],[1,1,1,1]],R:[[1,1],[1,,1],[1,,1],[1,1],[1,,1]],S:[[1,1,1],[1],[1,1,1],[,,1],[1,1,1]],T:[[1,1,1],[,1],[,1],[,1],[,1]],U:[[1,,1],[1,,1],[1,,1],[1,,1],[1,1,1]],V:[[1,,,,1],[1,,,,1],[,1,,1],[,1,,1],[,,1]],W:[[1,,,,1],[1,,,,1],[1,,,,1],[1,,1,,1],[1,1,1,1,1]],X:[[1,,,,1],[,1,,1],[,,1],[,1,,1],[1,,,,1]],Y:[[1,,1],[1,,1],[,1],[,1],[,1]],Z:[[1,1,1,1,1],[,,,1],[,,1],[,1],[1,1,1,1,1]],0:[[1,1,1],[1,,1],[1,,1],[1,,1],[1,1,1]],1:[[,1],[,1],[,1],[,1],[,1]],2:[[1,1,1],[0,0,1],[1,1,1],[1,0,0],[1,1,1]],3:[[1,1,1],[0,0,1],[1,1,1],[0,0,1],[1,1,1]],4:[[1,0,1],[1,0,1],[1,1,1],[0,0,1],[0,0,1]],5:[[1,1,1],[1,0,0],[1,1,1],[0,0,1],[1,1,1]],6:[[1,1,1],[1,0,0],[1,1,1],[1,0,1],[1,1,1]],7:[[1,1,1],[0,0,1],[0,0,1],[0,0,1],[0,0,1]],8:[[1,1,1],[1,0,1],[1,1,1],[1,0,1],[1,1,1]],9:[[1,1,1],[1,0,1],[1,1,1],[0,0,1],[1,1,1]]," ":[[,,],[,,],[,,],[,,],[,,]]};class Text extends Entity{constructor(t,s,i={}){super(t,s,i),this.hasCollision=0,this.size=i.size,this.string=i.text}draw(){let t=[];this.string=this.string.toUpperCase();for(let i=0;i<this.string.length;i++){var s=letters[this.string.charAt(i)];s&&t.push(s)}ctx.fillStyle="black";let i=this.x;for(let e=0;e<t.length;e++){s=t[e];let h=this.y,r=0;for(let t=0;t<s.length;t++){let e=s[t];for(let t=0;t<e.length;t++)e[t]&&ctx.fillRect(i+t*this.size,h,this.size,this.size);r=Math.max(r,e.length*this.size),h+=this.size}i+=this.size+r}}}class StartState extends Game{constructor(){super(),this.thingsKilled=0,this._lastKilled=0,this.currentDifficulty=3e3,this.add(Player,0,0,{n:"p",w:100,h:100}),this.add(Text,0,20,{size:12,text:"You can only shoot towards the middle!"}),this.clear=setInterval(()=>this._spawnEnemy(),this.currentDifficulty),setInterval(()=>{if(this.thingsKilled<=0||this._lastKilled%10&&this.thingsKilled!==this._lastKilled)return;0===this.thingsKilled%10&&this.currentDifficulty>=500&&(this.currentDifficulty-=500,console.log("INCREASING DIFFICULTY!",this.currentDifficulty),clearInterval(this.clear),this.clear=setInterval(()=>this._spawnEnemy(),this.currentDifficulty))},5e3)}update(){this.e.forEach(t=>{t.hasCollision&&this.e.forEach(s=>{s===t||!s.hasCollision||t instanceof Bullet&&s instanceof Bullet||s instanceof Bullet&&s.master===t||t instanceof Bullet&&t.master===s||this._check(t,s)&&(t.collide(s),s.collide(t))})})}_check(t,s){return t.x+t.w>s.x&&t.x<s.x+s.w&&t.y+t.h>s.y&&t.y<s.y+s.h}_spawnEnemy(){let t,s,i=this.getRandomArbitrary(1,4);1===i?(t=-5,s=this.getRandomArbitrary(-5,cv.height)):2===i?(t=this.getRandomArbitrary(-5,cv.width),s=-5):3===i?(t=cv.width+5,s=this.getRandomArbitrary(-5,cv.height)):(t=this.getRandomArbitrary(-5,cv.width),s=cv.height+5),this.add(Enemy,t,s,{w:50,h:50,target:this.getE("p")})}getRandomArbitrary(t,s){return Math.random()*(s-t)+t}}cv.width=window.innerWidth,cv.height=window.innerHeight;let s=new System(StartState);